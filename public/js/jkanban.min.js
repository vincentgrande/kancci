/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/jkanban.min.js":
/*!*************************************!*\
  !*** ./resources/js/jkanban.min.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n!function () {\n  return function e(t, n, o) {\n    function i(a, c) {\n      if (!n[a]) {\n        if (!t[a]) {\n          var d = undefined;\n          if (!c && d) return require(a, !0);\n          if (r) return r(a, !0);\n          var s = new Error(\"Cannot find module '\" + a + \"'\");\n          throw s.code = \"MODULE_NOT_FOUND\", s;\n        }\n\n        var l = n[a] = {\n          exports: {}\n        };\n        t[a][0].call(l.exports, function (e) {\n          return i(t[a][1][e] || e);\n        }, l, l.exports, e, t, n, o);\n      }\n\n      return n[a].exports;\n    }\n\n    for (var r = undefined, a = 0; a < o.length; a++) {\n      i(o[a]);\n    }\n\n    return i;\n  };\n}()({\n  1: [function (e, t, n) {\n    var o = e(\"dragula\");\n    !function () {\n      this.jKanban = function () {\n        var e = this,\n            t = {\n          enabled: !1\n        },\n            n = {\n          enabled: !1\n        };\n        this._disallowedItemProperties = [\"id\", \"title\", \"click\", \"context\", \"drag\", \"dragend\", \"drop\", \"order\"], this.element = \"\", this.container = \"\", this.boardContainer = [], this.handlers = [], this.dragula = o, this.drake = \"\", this.drakeBoard = \"\", this.itemAddOptions = n, this.itemHandleOptions = t;\n        var i = {\n          element: \"\",\n          gutter: \"15px\",\n          widthBoard: \"250px\",\n          responsive: \"700\",\n          responsivePercentage: !1,\n          boards: [],\n          dragBoards: !0,\n          dragItems: !0,\n          itemAddOptions: n,\n          itemHandleOptions: t,\n          dragEl: function dragEl(e, t) {},\n          dragendEl: function dragendEl(e) {},\n          dropEl: function dropEl(e, t, n, o) {},\n          dragBoard: function dragBoard(e, t) {},\n          dragendBoard: function dragendBoard(e) {},\n          dropBoard: function dropBoard(e, t, n, o) {},\n          click: function click(e) {},\n          context: function context(e, t) {},\n          buttonClick: function buttonClick(e, t) {},\n          propagationHandlers: []\n        };\n\n        function r(t, n) {\n          t.addEventListener(\"click\", function (t) {\n            e.options.propagationHandlers.includes(\"click\") || t.preventDefault(), e.options.click(this), \"function\" == typeof this.clickfn && this.clickfn(this);\n          });\n        }\n\n        function a(t, n) {\n          t.addEventListener ? t.addEventListener(\"contextmenu\", function (t) {\n            e.options.propagationHandlers.includes(\"context\") || t.preventDefault(), e.options.context(this, t), \"function\" == typeof this.contextfn && this.contextfn(this, t);\n          }, !1) : t.attachEvent(\"oncontextmenu\", function () {\n            e.options.context(this), \"function\" == typeof this.contextfn && this.contextfn(this), e.options.propagationHandlers.includes(\"context\") || (window.event.returnValue = !1);\n          });\n        }\n\n        function c(t, n) {\n          t.addEventListener(\"click\", function (t) {\n            t.preventDefault(), e.options.buttonClick(this, n);\n          });\n        }\n\n        function d(t) {\n          var n = [];\n          return e.options.boards.map(function (e) {\n            if (e.id === t) return n.push(e);\n          }), n[0];\n        }\n\n        function s(t, n) {\n          for (var o in n) {\n            e._disallowedItemProperties.indexOf(o) > -1 || t.setAttribute(\"data-\" + o, n[o]);\n          }\n        }\n\n        function l(t) {\n          var n = \"title\" in t ? t.title : \"\";\n\n          if (e.options.itemHandleOptions.enabled) {\n            if (void 0 !== (e.options.itemHandleOptions.customHandler || void 0)) return n = \"<div> \" + e.options.itemHandleOptions.customHandler.replace(/%([^%]+)%/g, function (e, n) {\n              return void 0 !== t[n] ? t[n] : \"\";\n            }) + \" </div>\";\n            var o = e.options.itemHandleOptions.customCssHandler,\n                i = e.options.itemHandleOptions.customCssIconHandler,\n                r = e.options.itemHandleOptions.customItemLayout;\n            void 0 === (o || void 0) && (o = \"drag_handler\"), void 0 === (i || void 0) && (i = o + \"_icon\"), void 0 === (r || void 0) && (r = \"\"), n = \"<div class='item_handle \" + o + \"'><i class='item_handle \" + i + \"'></i></div><div>\" + n + \"</div>\";\n          }\n\n          return n;\n        }\n\n        arguments[0] && \"object\" == _typeof(arguments[0]) && (this.options = function (e, t) {\n          var n;\n\n          for (n in t) {\n            t.hasOwnProperty(n) && (e[n] = t[n]);\n          }\n\n          return e;\n        }(i, arguments[0])), this.__getCanMove = function (t) {\n          return e.options.itemHandleOptions.enabled ? e.options.itemHandleOptions.handleClass ? t.classList.contains(e.options.itemHandleOptions.handleClass) : t.classList.contains(\"item_handle\") : !!e.options.dragItems;\n        }, this.init = function () {\n          !function () {\n            e.element = document.querySelector(e.options.element);\n            var t = document.createElement(\"div\");\n            t.classList.add(\"kanban-container\"), e.container = t, document.querySelector(e.options.element).dataset.hasOwnProperty(\"board\") ? (url = document.querySelector(e.options.element).dataset.board, window.fetch(url, {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(function (t) {\n              t.json().then(function (t) {\n                e.options.boards = t, e.addBoards(e.options.boards, !0);\n              });\n            })[\"catch\"](function (e) {\n              console.log(\"Error: \", e);\n            })) : e.addBoards(e.options.boards, !0);\n            e.element.appendChild(e.container);\n          }(), window.innerWidth > e.options.responsive && (e.drakeBoard = e.dragula([e.container], {\n            moves: function moves(t, n, o, i) {\n              return !!e.options.dragBoards && (o.classList.contains(\"kanban-board-header\") || o.classList.contains(\"kanban-title-board\"));\n            },\n            accepts: function accepts(e, t, n, o) {\n              return t.classList.contains(\"kanban-container\");\n            },\n            revertOnSpill: !0,\n            direction: \"horizontal\"\n          }).on(\"drag\", function (t, n) {\n            t.classList.add(\"is-moving\"), e.options.dragBoard(t, n), \"function\" == typeof t.dragfn && t.dragfn(t, n);\n          }).on(\"dragend\", function (t) {\n            !function () {\n              for (var t = 1, n = 0; n < e.container.childNodes.length; n++) {\n                e.container.childNodes[n].dataset.order = t++;\n              }\n            }(), t.classList.remove(\"is-moving\"), e.options.dragendBoard(t), \"function\" == typeof t.dragendfn && t.dragendfn(t);\n          }).on(\"drop\", function (t, n, o, i) {\n            t.classList.remove(\"is-moving\"), e.options.dropBoard(t, n, o, i), \"function\" == typeof t.dropfn && t.dropfn(t, n, o, i);\n          }), e.drake = e.dragula(e.boardContainer, {\n            moves: function moves(t, n, o, i) {\n              return e.__getCanMove(o);\n            },\n            revertOnSpill: !0\n          }).on(\"cancel\", function (t, n, o) {\n            e.enableAllBoards();\n          }).on(\"drag\", function (t, n) {\n            var o = t.getAttribute(\"class\");\n            if (\"\" !== o && o.indexOf(\"not-draggable\") > -1) e.drake.cancel(!0);else {\n              t.classList.add(\"is-moving\"), e.options.dragEl(t, n);\n              var i = d(n.parentNode.dataset.id);\n              void 0 !== i.dragTo && e.options.boards.map(function (t) {\n                -1 === i.dragTo.indexOf(t.id) && t.id !== n.parentNode.dataset.id && e.findBoard(t.id).classList.add(\"disabled-board\");\n              }), null !== t && \"function\" == typeof t.dragfn && t.dragfn(t, n);\n            }\n          }).on(\"dragend\", function (t) {\n            e.options.dragendEl(t), null !== t && \"function\" == typeof t.dragendfn && t.dragendfn(t);\n          }).on(\"drop\", function (t, n, o, i) {\n            e.enableAllBoards();\n            var r = d(o.parentNode.dataset.id);\n            (void 0 !== r.dragTo && -1 === r.dragTo.indexOf(n.parentNode.dataset.id) && n.parentNode.dataset.id !== o.parentNode.dataset.id && e.drake.cancel(!0), null !== t) && (!1 === e.options.dropEl(t, n, o, i) && e.drake.cancel(!0), t.classList.remove(\"is-moving\"), \"function\" == typeof t.dropfn && t.dropfn(t, n, o, i));\n          }));\n        }, this.enableAllBoards = function () {\n          var e = document.querySelectorAll(\".kanban-board\");\n          if (e.length > 0 && void 0 !== e) for (var t = 0; t < e.length; t++) {\n            e[t].classList.remove(\"disabled-board\");\n          }\n        }, this.addElement = function (t, n, o) {\n          void 0 === o && (o = -1);\n          var i = e.element.querySelector('[data-id=\"' + t + '\"] .kanban-drag'),\n              c = i.childNodes[o],\n              d = document.createElement(\"div\");\n          return d.classList.add(\"kanban-item\"), void 0 !== n.id && \"\" !== n.id && d.setAttribute(\"data-eid\", n.id), n[\"class\"] && Array.isArray(n[\"class\"]) && n[\"class\"].forEach(function (e) {\n            d.classList.add(e);\n          }), d.innerHTML = l(n), d.clickfn = n.click, d.contextfn = n.context, d.dragfn = n.drag, d.dragendfn = n.dragend, d.dropfn = n.drop, s(d, n), r(d), a(d), e.options.itemHandleOptions.enabled && (d.style.cursor = \"default\"), i.insertBefore(d, c), e;\n        }, this.addForm = function (t, n) {\n          var o = e.element.querySelector('[data-id=\"' + t + '\"] .kanban-drag'),\n              i = n.getAttribute(\"class\");\n          return n.setAttribute(\"class\", i + \" not-draggable\"), o.appendChild(n), e;\n        }, this.addBoards = function (t, n) {\n          if (e.options.responsivePercentage) {\n            if (e.container.style.width = \"100%\", e.options.gutter = \"1%\", window.innerWidth > e.options.responsive) var o = (100 - 2 * t.length) / t.length;else o = 100 - 2 * t.length;\n          } else o = e.options.widthBoard;\n          var i = e.options.itemAddOptions.enabled,\n              d = e.options.itemAddOptions.content,\n              u = e.options.itemAddOptions[\"class\"],\n              f = e.options.itemAddOptions.footer;\n\n          for (var p in t) {\n            var v = t[p];\n            n || e.options.boards.push(v), e.options.responsivePercentage || (\"\" === e.container.style.width ? e.container.style.width = parseInt(o) + 2 * parseInt(e.options.gutter) + \"px\" : e.container.style.width = parseInt(e.container.style.width) + parseInt(o) + 2 * parseInt(e.options.gutter) + \"px\");\n            var m = document.createElement(\"div\");\n            m.dataset.id = v.id, m.dataset.order = e.container.childNodes.length + 1, m.classList.add(\"kanban-board\"), e.options.responsivePercentage ? m.style.width = o + \"%\" : m.style.width = o, m.style.marginLeft = e.options.gutter, m.style.marginRight = e.options.gutter;\n            var h = document.createElement(\"header\");\n            if (\"\" !== v[\"class\"] && void 0 !== v[\"class\"]) var g = v[\"class\"].split(\",\");else g = [];\n            h.classList.add(\"kanban-board-header\"), g.map(function (e) {\n              e = e.replace(/^[ ]+/g, \"\"), h.classList.add(e);\n            }), h.innerHTML = '<div class=\"kanban-title-board\">' + v.title + \"</div>\";\n            var y = document.createElement(\"main\");\n            if (y.classList.add(\"kanban-drag\"), \"\" !== v.bodyClass && void 0 !== v.bodyClass) var b = v.bodyClass.split(\",\");else b = [];\n\n            for (var w in b.map(function (e) {\n              y.classList.add(e);\n            }), e.boardContainer.push(y), v.item) {\n              var E = v.item[w],\n                  T = document.createElement(\"div\");\n              T.classList.add(\"kanban-item\"), E.id && (T.dataset.eid = E.id), E[\"class\"] && Array.isArray(E[\"class\"]) && E[\"class\"].forEach(function (e) {\n                T.classList.add(e);\n              }), T.innerHTML = l(E), T.clickfn = E.click, T.contextfn = E.context, T.dragfn = E.drag, T.dragendfn = E.dragend, T.dropfn = E.drop, s(T, E), r(T), a(T), e.options.itemHandleOptions.enabled && (T.style.cursor = \"default\"), y.appendChild(T);\n            }\n\n            var x = document.createElement(\"footer\");\n\n            if (i) {\n              var C = document.createElement(\"BUTTON\"),\n                  O = document.createTextNode(d || \"+\");\n              C.setAttribute(\"class\", u || \"kanban-title-button btn btn-default btn-xs\"), C.appendChild(O), f ? x.appendChild(C) : h.appendChild(C), c(C, v.id);\n            }\n\n            m.appendChild(h), m.appendChild(y), m.appendChild(x), e.container.appendChild(m);\n          }\n\n          return e;\n        }, this.findBoard = function (t) {\n          return e.element.querySelector('[data-id=\"' + t + '\"]');\n        }, this.getParentBoardID = function (t) {\n          return \"string\" == typeof t && (t = e.element.querySelector('[data-eid=\"' + t + '\"]')), null === t ? null : t.parentNode.parentNode.dataset.id;\n        }, this.moveElement = function (e, t, n) {\n          if (e !== this.getParentBoardID(t)) return this.removeElement(t), this.addElement(e, n);\n        }, this.replaceElement = function (t, n) {\n          var o = t;\n          return \"string\" == typeof o && (o = e.element.querySelector('[data-eid=\"' + t + '\"]')), o.innerHTML = l(n), o.clickfn = n.click, o.contextfn = n.context, o.dragfn = n.drag, o.dragendfn = n.dragend, o.dropfn = n.drop, s(o, n), r(o), a(o), e;\n        }, this.findElement = function (t) {\n          return e.element.querySelector('[data-eid=\"' + t + '\"]');\n        }, this.getBoardElements = function (t) {\n          return e.element.querySelector('[data-id=\"' + t + '\"] .kanban-drag').childNodes;\n        }, this.removeElement = function (t) {\n          return \"string\" == typeof t && (t = e.element.querySelector('[data-eid=\"' + t + '\"]')), null !== t && (\"function\" == typeof t.remove ? t.remove() : t.parentNode.removeChild(t)), e;\n        }, this.removeBoard = function (t) {\n          var n = null;\n          \"string\" == typeof t && (n = e.element.querySelector('[data-id=\"' + t + '\"]')), null !== n && (\"function\" == typeof n.remove ? n.remove() : n.parentNode.removeChild(n));\n\n          for (var o = 0; o < e.options.boards.length; o++) {\n            if (e.options.boards[o].id === t) {\n              e.options.boards.splice(o, 1);\n              break;\n            }\n          }\n\n          return e;\n        }, this.onButtonClick = function (e) {}, this.init();\n      };\n    }();\n  }, {\n    dragula: 9\n  }],\n  2: [function (e, t, n) {\n    t.exports = function (e, t) {\n      return Array.prototype.slice.call(e, t);\n    };\n  }, {}],\n  3: [function (e, t, n) {\n    \"use strict\";\n\n    var o = e(\"ticky\");\n\n    t.exports = function (e, t, n) {\n      e && o(function () {\n        e.apply(n || null, t || []);\n      });\n    };\n  }, {\n    ticky: 11\n  }],\n  4: [function (e, t, n) {\n    \"use strict\";\n\n    var o = e(\"atoa\"),\n        i = e(\"./debounce\");\n\n    t.exports = function (e, t) {\n      var n = t || {},\n          r = {};\n      return void 0 === e && (e = {}), e.on = function (t, n) {\n        return r[t] ? r[t].push(n) : r[t] = [n], e;\n      }, e.once = function (t, n) {\n        return n._once = !0, e.on(t, n), e;\n      }, e.off = function (t, n) {\n        var o = arguments.length;\n        if (1 === o) delete r[t];else if (0 === o) r = {};else {\n          var i = r[t];\n          if (!i) return e;\n          i.splice(i.indexOf(n), 1);\n        }\n        return e;\n      }, e.emit = function () {\n        var t = o(arguments);\n        return e.emitterSnapshot(t.shift()).apply(this, t);\n      }, e.emitterSnapshot = function (t) {\n        var a = (r[t] || []).slice(0);\n        return function () {\n          var r = o(arguments),\n              c = this || e;\n          if (\"error\" === t && !1 !== n[\"throws\"] && !a.length) throw 1 === r.length ? r[0] : r;\n          return a.forEach(function (o) {\n            n.async ? i(o, r, c) : o.apply(c, r), o._once && e.off(t, o);\n          }), e;\n        };\n      }, e;\n    };\n  }, {\n    \"./debounce\": 3,\n    atoa: 2\n  }],\n  5: [function (e, t, n) {\n    (function (n) {\n      (function () {\n        \"use strict\";\n\n        var o = e(\"custom-event\"),\n            i = e(\"./eventmap\"),\n            r = n.document,\n            a = function a(e, t, n, o) {\n          return e.addEventListener(t, n, o);\n        },\n            c = function c(e, t, n, o) {\n          return e.removeEventListener(t, n, o);\n        },\n            d = [];\n\n        function s(e, t, n) {\n          var o = function (e, t, n) {\n            var o, i;\n\n            for (o = 0; o < d.length; o++) {\n              if ((i = d[o]).element === e && i.type === t && i.fn === n) return o;\n            }\n          }(e, t, n);\n\n          if (o) {\n            var i = d[o].wrapper;\n            return d.splice(o, 1), i;\n          }\n        }\n\n        n.addEventListener || (a = function a(e, t, o) {\n          return e.attachEvent(\"on\" + t, function (e, t, o) {\n            var i = s(e, t, o) || function (e, t, o) {\n              return function (t) {\n                var i = t || n.event;\n                i.target = i.target || i.srcElement, i.preventDefault = i.preventDefault || function () {\n                  i.returnValue = !1;\n                }, i.stopPropagation = i.stopPropagation || function () {\n                  i.cancelBubble = !0;\n                }, i.which = i.which || i.keyCode, o.call(e, i);\n              };\n            }(e, 0, o);\n\n            return d.push({\n              wrapper: i,\n              element: e,\n              type: t,\n              fn: o\n            }), i;\n          }(e, t, o));\n        }, c = function c(e, t, n) {\n          var o = s(e, t, n);\n          if (o) return e.detachEvent(\"on\" + t, o);\n        }), t.exports = {\n          add: a,\n          remove: c,\n          fabricate: function fabricate(e, t, n) {\n            var a = -1 === i.indexOf(t) ? new o(t, {\n              detail: n\n            }) : function () {\n              var e;\n              r.createEvent ? (e = r.createEvent(\"Event\")).initEvent(t, !0, !0) : r.createEventObject && (e = r.createEventObject());\n              return e;\n            }();\n            e.dispatchEvent ? e.dispatchEvent(a) : e.fireEvent(\"on\" + t, a);\n          }\n        };\n      }).call(this);\n    }).call(this, \"undefined\" != typeof __webpack_require__.g ? __webpack_require__.g : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {});\n  }, {\n    \"./eventmap\": 6,\n    \"custom-event\": 7\n  }],\n  6: [function (e, t, n) {\n    (function (e) {\n      (function () {\n        \"use strict\";\n\n        var n = [],\n            o = \"\",\n            i = /^on/;\n\n        for (o in e) {\n          i.test(o) && n.push(o.slice(2));\n        }\n\n        t.exports = n;\n      }).call(this);\n    }).call(this, \"undefined\" != typeof __webpack_require__.g ? __webpack_require__.g : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {});\n  }, {}],\n  7: [function (e, t, n) {\n    (function (e) {\n      (function () {\n        var n = e.CustomEvent;\n        t.exports = function () {\n          try {\n            var e = new n(\"cat\", {\n              detail: {\n                foo: \"bar\"\n              }\n            });\n            return \"cat\" === e.type && \"bar\" === e.detail.foo;\n          } catch (e) {}\n\n          return !1;\n        }() ? n : \"undefined\" != typeof document && \"function\" == typeof document.createEvent ? function (e, t) {\n          var n = document.createEvent(\"CustomEvent\");\n          return t ? n.initCustomEvent(e, t.bubbles, t.cancelable, t.detail) : n.initCustomEvent(e, !1, !1, void 0), n;\n        } : function (e, t) {\n          var n = document.createEventObject();\n          return n.type = e, t ? (n.bubbles = Boolean(t.bubbles), n.cancelable = Boolean(t.cancelable), n.detail = t.detail) : (n.bubbles = !1, n.cancelable = !1, n.detail = void 0), n;\n        };\n      }).call(this);\n    }).call(this, \"undefined\" != typeof __webpack_require__.g ? __webpack_require__.g : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {});\n  }, {}],\n  8: [function (e, t, n) {\n    \"use strict\";\n\n    var o = {},\n        i = \"(?:^|\\\\s)\",\n        r = \"(?:\\\\s|$)\";\n\n    function a(e) {\n      var t = o[e];\n      return t ? t.lastIndex = 0 : o[e] = t = new RegExp(i + e + r, \"g\"), t;\n    }\n\n    t.exports = {\n      add: function add(e, t) {\n        var n = e.className;\n        n.length ? a(t).test(n) || (e.className += \" \" + t) : e.className = t;\n      },\n      rm: function rm(e, t) {\n        e.className = e.className.replace(a(t), \" \").trim();\n      }\n    };\n  }, {}],\n  9: [function (e, t, n) {\n    (function (n) {\n      (function () {\n        \"use strict\";\n\n        var o = e(\"contra/emitter\"),\n            i = e(\"crossvent\"),\n            r = e(\"./classes\"),\n            a = document,\n            c = a.documentElement;\n\n        function d(e, t, o, r) {\n          n.navigator.pointerEnabled ? i[t](e, {\n            mouseup: \"pointerup\",\n            mousedown: \"pointerdown\",\n            mousemove: \"pointermove\"\n          }[o], r) : n.navigator.msPointerEnabled ? i[t](e, {\n            mouseup: \"MSPointerUp\",\n            mousedown: \"MSPointerDown\",\n            mousemove: \"MSPointerMove\"\n          }[o], r) : (i[t](e, {\n            mouseup: \"touchend\",\n            mousedown: \"touchstart\",\n            mousemove: \"touchmove\"\n          }[o], r), i[t](e, o, r));\n        }\n\n        function s(e) {\n          if (void 0 !== e.touches) return e.touches.length;\n          if (void 0 !== e.which && 0 !== e.which) return e.which;\n          if (void 0 !== e.buttons) return e.buttons;\n          var t = e.button;\n          return void 0 !== t ? 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0 : void 0;\n        }\n\n        function l(e, t) {\n          return void 0 !== n[t] ? n[t] : c.clientHeight ? c[e] : a.body[e];\n        }\n\n        function u(e, t, n) {\n          var o,\n              i = (e = e || {}).className || \"\";\n          return e.className += \" gu-hide\", o = a.elementFromPoint(t, n), e.className = i, o;\n        }\n\n        function f() {\n          return !1;\n        }\n\n        function p() {\n          return !0;\n        }\n\n        function v(e) {\n          return e.width || e.right - e.left;\n        }\n\n        function m(e) {\n          return e.height || e.bottom - e.top;\n        }\n\n        function h(e) {\n          return e.parentNode === a ? null : e.parentNode;\n        }\n\n        function g(e) {\n          return \"INPUT\" === e.tagName || \"TEXTAREA\" === e.tagName || \"SELECT\" === e.tagName || function e(t) {\n            if (!t) return !1;\n            if (\"false\" === t.contentEditable) return !1;\n            if (\"true\" === t.contentEditable) return !0;\n            return e(h(t));\n          }(e);\n        }\n\n        function y(e) {\n          return e.nextElementSibling || function () {\n            var t = e;\n\n            do {\n              t = t.nextSibling;\n            } while (t && 1 !== t.nodeType);\n\n            return t;\n          }();\n        }\n\n        function b(e, t) {\n          var n = function (e) {\n            return e.targetTouches && e.targetTouches.length ? e.targetTouches[0] : e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e;\n          }(t),\n              o = {\n            pageX: \"clientX\",\n            pageY: \"clientY\"\n          };\n\n          return e in o && !(e in n) && o[e] in n && (e = o[e]), n[e];\n        }\n\n        t.exports = function (e, t) {\n          var n, w, E, T, x, C, O, k, S, L, B;\n          1 === arguments.length && !1 === Array.isArray(e) && (t = e, e = []);\n          var N,\n              I = null,\n              A = t || {};\n          void 0 === A.moves && (A.moves = p), void 0 === A.accepts && (A.accepts = p), void 0 === A.invalid && (A.invalid = function () {\n            return !1;\n          }), void 0 === A.containers && (A.containers = e || []), void 0 === A.isContainer && (A.isContainer = f), void 0 === A.copy && (A.copy = !1), void 0 === A.copySortSource && (A.copySortSource = !1), void 0 === A.revertOnSpill && (A.revertOnSpill = !1), void 0 === A.removeOnSpill && (A.removeOnSpill = !1), void 0 === A.direction && (A.direction = \"vertical\"), void 0 === A.ignoreInputTextSelection && (A.ignoreInputTextSelection = !0), void 0 === A.mirrorContainer && (A.mirrorContainer = a.body);\n\n          var _ = o({\n            containers: A.containers,\n            start: function start(e) {\n              var t = j(e);\n              t && F(t);\n            },\n            end: R,\n            cancel: W,\n            remove: V,\n            destroy: function destroy() {\n              P(!0), K({});\n            },\n            canMove: function canMove(e) {\n              return !!j(e);\n            },\n            dragging: !1\n          });\n\n          return !0 === A.removeOnSpill && _.on(\"over\", function (e) {\n            r.rm(e, \"gu-hide\");\n          }).on(\"out\", function (e) {\n            _.dragging && r.add(e, \"gu-hide\");\n          }), P(), _;\n\n          function H(e) {\n            return -1 !== _.containers.indexOf(e) || A.isContainer(e);\n          }\n\n          function P(e) {\n            var t = e ? \"remove\" : \"add\";\n            d(c, t, \"mousedown\", X), d(c, t, \"mouseup\", K);\n          }\n\n          function q(e) {\n            d(c, e ? \"remove\" : \"add\", \"mousemove\", Y);\n          }\n\n          function M(e) {\n            var t = e ? \"remove\" : \"add\";\n            i[t](c, \"selectstart\", D), i[t](c, \"click\", D);\n          }\n\n          function D(e) {\n            N && e.preventDefault();\n          }\n\n          function X(e) {\n            if (C = e.clientX, O = e.clientY, 1 === s(e) && !e.metaKey && !e.ctrlKey) {\n              var t = e.target,\n                  n = j(t);\n              n && (N = n, q(), \"mousedown\" === e.type && (g(t) ? t.focus() : e.preventDefault()));\n            }\n          }\n\n          function Y(e) {\n            if (N) if (0 !== s(e)) {\n              if (!(void 0 !== e.clientX && Math.abs(e.clientX - C) <= (A.slideFactorX || 0) && void 0 !== e.clientY && Math.abs(e.clientY - O) <= (A.slideFactorY || 0))) {\n                if (A.ignoreInputTextSelection) {\n                  var t = b(\"clientX\", e) || 0,\n                      o = b(\"clientY\", e) || 0;\n                  if (g(a.elementFromPoint(t, o))) return;\n                }\n\n                var i = N;\n                q(!0), M(), R(), F(i);\n                var u,\n                    f = {\n                  left: (u = E.getBoundingClientRect()).left + l(\"scrollLeft\", \"pageXOffset\"),\n                  top: u.top + l(\"scrollTop\", \"pageYOffset\")\n                };\n                T = b(\"pageX\", e) - f.left, x = b(\"pageY\", e) - f.top, r.add(L || E, \"gu-transit\"), function () {\n                  if (!n) {\n                    var e = E.getBoundingClientRect();\n                    (n = E.cloneNode(!0)).style.width = v(e) + \"px\", n.style.height = m(e) + \"px\", r.rm(n, \"gu-transit\"), r.add(n, \"gu-mirror\"), A.mirrorContainer.appendChild(n), d(c, \"add\", \"mousemove\", Q), r.add(A.mirrorContainer, \"gu-unselectable\"), _.emit(\"cloned\", n, E, \"mirror\");\n                  }\n                }(), Q(e);\n              }\n            } else K({});\n          }\n\n          function j(e) {\n            if (!(_.dragging && n || H(e))) {\n              for (var t = e; h(e) && !1 === H(h(e));) {\n                if (A.invalid(e, t)) return;\n                if (!(e = h(e))) return;\n              }\n\n              var o = h(e);\n              if (o && !A.invalid(e, t) && A.moves(e, o, t, y(e))) return {\n                item: e,\n                source: o\n              };\n            }\n          }\n\n          function F(e) {\n            var t, n;\n            t = e.item, n = e.source, (\"boolean\" == typeof A.copy ? A.copy : A.copy(t, n)) && (L = e.item.cloneNode(!0), _.emit(\"cloned\", L, e.item, \"copy\")), w = e.source, E = e.item, k = S = y(e.item), _.dragging = !0, _.emit(\"drag\", E, w);\n          }\n\n          function R() {\n            if (_.dragging) {\n              var e = L || E;\n              z(e, h(e));\n            }\n          }\n\n          function U() {\n            N = !1, q(!0), M(!0);\n          }\n\n          function K(e) {\n            if (U(), _.dragging) {\n              var t = L || E,\n                  o = b(\"clientX\", e) || 0,\n                  i = b(\"clientY\", e) || 0,\n                  r = J(u(n, o, i), o, i);\n              r && (L && A.copySortSource || !L || r !== w) ? z(t, r) : A.removeOnSpill ? V() : W();\n            }\n          }\n\n          function z(e, t) {\n            var n = h(e);\n            L && A.copySortSource && t === w && n.removeChild(E), $(t) ? _.emit(\"cancel\", e, w, w) : _.emit(\"drop\", e, t, w, S), G();\n          }\n\n          function V() {\n            if (_.dragging) {\n              var e = L || E,\n                  t = h(e);\n              t && t.removeChild(e), _.emit(L ? \"cancel\" : \"remove\", e, t, w), G();\n            }\n          }\n\n          function W(e) {\n            if (_.dragging) {\n              var t = arguments.length > 0 ? e : A.revertOnSpill,\n                  n = L || E,\n                  o = h(n),\n                  i = $(o);\n              !1 === i && t && (L ? o && o.removeChild(L) : w.insertBefore(n, k)), i || t ? _.emit(\"cancel\", n, w, w) : _.emit(\"drop\", n, o, w, S), G();\n            }\n          }\n\n          function G() {\n            var e = L || E;\n            U(), n && (r.rm(A.mirrorContainer, \"gu-unselectable\"), d(c, \"remove\", \"mousemove\", Q), h(n).removeChild(n), n = null), e && r.rm(e, \"gu-transit\"), B && clearTimeout(B), _.dragging = !1, I && _.emit(\"out\", e, I, w), _.emit(\"dragend\", e), w = E = L = k = S = B = I = null;\n          }\n\n          function $(e, t) {\n            var o;\n            return o = void 0 !== t ? t : n ? S : y(L || E), e === w && o === k;\n          }\n\n          function J(e, t, n) {\n            for (var o = e; o && !i();) {\n              o = h(o);\n            }\n\n            return o;\n\n            function i() {\n              if (!1 === H(o)) return !1;\n              var i = Z(o, e),\n                  r = ee(o, i, t, n);\n              return !!$(o, r) || A.accepts(E, o, w, r);\n            }\n          }\n\n          function Q(e) {\n            if (n) {\n              e.preventDefault();\n              var t = b(\"clientX\", e) || 0,\n                  o = b(\"clientY\", e) || 0,\n                  i = t - T,\n                  r = o - x;\n              n.style.left = i + \"px\", n.style.top = r + \"px\";\n              var a = L || E,\n                  c = u(n, t, o),\n                  d = J(c, t, o),\n                  s = null !== d && d !== I;\n              (s || null === d) && (I && v(\"out\"), I = d, s && v(\"over\"));\n              var l = h(a);\n\n              if (d !== w || !L || A.copySortSource) {\n                var f,\n                    p = Z(d, c);\n                if (null !== p) f = ee(d, p, t, o);else {\n                  if (!0 !== A.revertOnSpill || L) return void (L && l && l.removeChild(a));\n                  f = k, d = w;\n                }\n                (null === f && s || f !== a && f !== y(a)) && (S = f, d.insertBefore(a, f), _.emit(\"shadow\", a, d, w));\n              } else l && l.removeChild(a);\n            }\n\n            function v(e) {\n              _.emit(e, a, I, w);\n            }\n          }\n\n          function Z(e, t) {\n            for (var n = t; n !== e && h(n) !== e;) {\n              n = h(n);\n            }\n\n            return n === c ? null : n;\n          }\n\n          function ee(e, t, n, o) {\n            var i,\n                r = \"horizontal\" === A.direction;\n            return t !== e ? (i = t.getBoundingClientRect(), a(r ? n > i.left + v(i) / 2 : o > i.top + m(i) / 2)) : function () {\n              var t,\n                  i,\n                  a,\n                  c = e.children.length;\n\n              for (t = 0; t < c; t++) {\n                if (i = e.children[t], a = i.getBoundingClientRect(), r && a.left + a.width / 2 > n) return i;\n                if (!r && a.top + a.height / 2 > o) return i;\n              }\n\n              return null;\n            }();\n\n            function a(e) {\n              return e ? y(t) : t;\n            }\n          }\n        };\n      }).call(this);\n    }).call(this, \"undefined\" != typeof __webpack_require__.g ? __webpack_require__.g : \"undefined\" != typeof self ? self : \"undefined\" != typeof window ? window : {});\n  }, {\n    \"./classes\": 8,\n    \"contra/emitter\": 4,\n    crossvent: 5\n  }],\n  10: [function (e, t, n) {\n    var o,\n        i,\n        r = t.exports = {};\n\n    function a() {\n      throw new Error(\"setTimeout has not been defined\");\n    }\n\n    function c() {\n      throw new Error(\"clearTimeout has not been defined\");\n    }\n\n    function d(e) {\n      if (o === setTimeout) return setTimeout(e, 0);\n      if ((o === a || !o) && setTimeout) return o = setTimeout, setTimeout(e, 0);\n\n      try {\n        return o(e, 0);\n      } catch (t) {\n        try {\n          return o.call(null, e, 0);\n        } catch (t) {\n          return o.call(this, e, 0);\n        }\n      }\n    }\n\n    !function () {\n      try {\n        o = \"function\" == typeof setTimeout ? setTimeout : a;\n      } catch (e) {\n        o = a;\n      }\n\n      try {\n        i = \"function\" == typeof clearTimeout ? clearTimeout : c;\n      } catch (e) {\n        i = c;\n      }\n    }();\n    var s,\n        l = [],\n        u = !1,\n        f = -1;\n\n    function p() {\n      u && s && (u = !1, s.length ? l = s.concat(l) : f = -1, l.length && v());\n    }\n\n    function v() {\n      if (!u) {\n        var e = d(p);\n        u = !0;\n\n        for (var t = l.length; t;) {\n          for (s = l, l = []; ++f < t;) {\n            s && s[f].run();\n          }\n\n          f = -1, t = l.length;\n        }\n\n        s = null, u = !1, function (e) {\n          if (i === clearTimeout) return clearTimeout(e);\n          if ((i === c || !i) && clearTimeout) return i = clearTimeout, clearTimeout(e);\n\n          try {\n            i(e);\n          } catch (t) {\n            try {\n              return i.call(null, e);\n            } catch (t) {\n              return i.call(this, e);\n            }\n          }\n        }(e);\n      }\n    }\n\n    function m(e, t) {\n      this.fun = e, this.array = t;\n    }\n\n    function h() {}\n\n    r.nextTick = function (e) {\n      var t = new Array(arguments.length - 1);\n      if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) {\n        t[n - 1] = arguments[n];\n      }\n      l.push(new m(e, t)), 1 !== l.length || u || d(v);\n    }, m.prototype.run = function () {\n      this.fun.apply(null, this.array);\n    }, r.title = \"browser\", r.browser = !0, r.env = {}, r.argv = [], r.version = \"\", r.versions = {}, r.on = h, r.addListener = h, r.once = h, r.off = h, r.removeListener = h, r.removeAllListeners = h, r.emit = h, r.prependListener = h, r.prependOnceListener = h, r.listeners = function (e) {\n      return [];\n    }, r.binding = function (e) {\n      throw new Error(\"process.binding is not supported\");\n    }, r.cwd = function () {\n      return \"/\";\n    }, r.chdir = function (e) {\n      throw new Error(\"process.chdir is not supported\");\n    }, r.umask = function () {\n      return 0;\n    };\n  }, {}],\n  11: [function (e, t, n) {\n    (function (e) {\n      (function () {\n        var n;\n        n = \"function\" == typeof e ? function (t) {\n          e(t);\n        } : function (e) {\n          setTimeout(e, 0);\n        }, t.exports = n;\n      }).call(this);\n    }).call(this, e(\"timers\").setImmediate);\n  }, {\n    timers: 12\n  }],\n  12: [function (e, t, n) {\n    (function (t, o) {\n      (function () {\n        var i = e(\"process/browser.js\").nextTick,\n            r = Function.prototype.apply,\n            a = Array.prototype.slice,\n            c = {},\n            d = 0;\n\n        function s(e, t) {\n          this._id = e, this._clearFn = t;\n        }\n\n        n.setTimeout = function () {\n          return new s(r.call(setTimeout, window, arguments), clearTimeout);\n        }, n.setInterval = function () {\n          return new s(r.call(setInterval, window, arguments), clearInterval);\n        }, n.clearTimeout = n.clearInterval = function (e) {\n          e.close();\n        }, s.prototype.unref = s.prototype.ref = function () {}, s.prototype.close = function () {\n          this._clearFn.call(window, this._id);\n        }, n.enroll = function (e, t) {\n          clearTimeout(e._idleTimeoutId), e._idleTimeout = t;\n        }, n.unenroll = function (e) {\n          clearTimeout(e._idleTimeoutId), e._idleTimeout = -1;\n        }, n._unrefActive = n.active = function (e) {\n          clearTimeout(e._idleTimeoutId);\n          var t = e._idleTimeout;\n          t >= 0 && (e._idleTimeoutId = setTimeout(function () {\n            e._onTimeout && e._onTimeout();\n          }, t));\n        }, n.setImmediate = \"function\" == typeof t ? t : function (e) {\n          var t = d++,\n              o = !(arguments.length < 2) && a.call(arguments, 1);\n          return c[t] = !0, i(function () {\n            c[t] && (o ? e.apply(null, o) : e.call(null), n.clearImmediate(t));\n          }), t;\n        }, n.clearImmediate = \"function\" == typeof o ? o : function (e) {\n          delete c[e];\n        };\n      }).call(this);\n    }).call(this, e(\"timers\").setImmediate, e(\"timers\").clearImmediate);\n  }, {\n    \"process/browser.js\": 10,\n    timers: 12\n  }]\n}, {}, [1]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/jkanban.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/jkanban.min.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;